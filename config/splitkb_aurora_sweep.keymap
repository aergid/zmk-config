/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

#include "layers.dtsi"

#define HOST_OS 2  // set to 2 for macOS/Windows-Alt-Codes, default is 0 (Windows)
#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/international_chars/swedish.dtsi"

&caps_word {
   continue-list = <UNDERSCORE MINUS BACKSPACE>;
};

&mt {
   // flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ {

    combos {
        #include "combos.dtsi"    
    };

    behaviors {
        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY_QUICK_RELEASE";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
        };

        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
};

/*           34 Keys
╭──────────────╮ ╭──────────────╮
│ 0  1  2  3  4│ │ 5  6  7  8  9│
│10 11 12 13 14│ │15 16 17 18 19│
│20 21 22 23 24│ │25 26 27 28 29│
╰────────╮30 31│ │32 33╭────────╯
         ╰─────╯ ╰─────╯         */

/ {
keymap {
compatible = "zmk,keymap";
colemak_layer {
    bindings = <
        &kp Q 	&kp W 	&kp F 	&kp P 	&kp B 		&kp J 	&kp L   &kp U     &kp Y   	&kp APOS
        &kp A 	&kp R 	&kp S 	&kp T 	&kp G 		&kp M 	&kp N   &kp E     &kp I   	&kp O
        &kp Z 	&kp X 	&kp C 	&kp D 	&kp V 		&kp K 	&kp H   &kp COMMA &kp DOT 	&kp SEMI
                                &lt NAV TAB &lt SYM SPACE 	    &lt FUN RET   &lt NUM BSPC
    >;
};

symbol_layer {                
    bindings = <
        &kp EXCL    &kp AT      &kp HASH    &kp DOLLAR  &kp PRCNT       &kp CARET   &kp AMPS    &kp LBRC    &kp RBRC    &kp DQT
        &sk LCTRL   &sk LALT    &sk LGUI    &sk LSHFT   &kp BSLH        &kp FSLH    &kp PIPE    &kp LPAR 	&kp RPAR    &kp GRAVE
        &sv_ae 	    &sv_ao 		&sv_oe      &kp LT      &kp GT          &kp UNDER   &kp PRCNT   &kp LBKT    &kp RBKT    &kp COLON
                                            &trans   	&trans 	        &trans      &trans
    >;
};

number_layer {
    bindings = <
        &kp GRAVE  &kp N7  &kp N8  &kp N9 	&kp STAR 		    &kp CARET 	  &kp TILDE   &kp EXCL   &kp AT    &kp HASH
        &kp AT     &kp N4  &kp N5  &kp N6   &kp PLUS 		    &kp MINUS     &sk RSHIFT  &sk RGUI   &sk RALT  &sk RCTRL
        &kp N0     &kp N1  &kp N2  &kp N3 	&kp FSLH 		    &kp COLON 	  &kp PRCNT 	  &kp LT  	 &kp GT    &kp EQUAL
                                   &kp DOT  &trans              &trans        &trans
    >;
};

nav_layer {
    bindings = <
        &kp C_PLAY 	    &kp C_PAUSE      &kp C_PREV       &kp C_NEXT      &kp C_VOL_UP       &kp LC(A)     &kp END   &kp HOME   &kp LC(E)     &none
        &sk LCTRL       &sk LALT         &sk LGUI         &sk LSHFT       &kp C_VOL_DN       &kp LEFT      &kp DOWN  &kp UP     &kp RIGHT     &none
        &rgb_ug RGB_TOG &rgb_ug RGB_EFF  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD &kp K_MUTE 	     &kp LC(PG_DN) &kp PG_DN &kp PG_UP  &kp LC(PG_UP) &kp PSCRN
                                                          &trans          &trans 		     &trans        &trans
    >;
};

fun_layer {
    bindings = <
        &none    &kp F7  &kp F8   &kp F9 	&kp F10 		&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &out OUT_BLE  &out OUT_USB
        &kp CAPS &kp F4  &kp F5   &kp F6 	&kp F11 		&kp MINUS     &sk RSHIFT    &sk RGUI      &sk RALT      &sk RCTRL   
        &none 	 &kp F1  &kp F2	  &kp F3 	&kp F12 		&none         &none         &none         &ext_power EP_ON &ext_power EP_OFF
                                  &trans 	&trans 	        &trans        &trans
    >;
};

lock_layer {
// only way out is the lock combo
// other combos are disabled too
bindings = <
&none &none &none &none &none &none &none &none &none &none 
&none &none &none &none &none &none &none &none &none &none 
&none &none &none &none &none &none &none &none &none &none 
&none &none &none &none 
                    >;
                };
        };
};
