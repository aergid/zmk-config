/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#include "layers.dtsi"

&caps_word {
   continue-list = <UNDERSCORE MINUS BACKSPACE>;
};

&mt {
   // flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ {

    combos {
        #include "combos.dtsi"    
    };

    behaviors {
        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY_QUICK_RELEASE";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
        };

        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        lh_pht: left_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <100>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <300>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <    // <---[[right-hand keys and thumbs]]
                5 6 7 8 9 10
                15 16 17 18 19
                30 31 32 33
                >;
        };

        rh_pht: right_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <100>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <    // <---[[left-hand keys and thumbs]]
                 0  1  2  3  4
                10 11 12 13 14
                20 21 22 23 24
                30 31 32 33
                >;
        };
    };
};

/*           34 Keys
╭──────────────╮ ╭──────────────╮
│ 0  1  2  3  4│ │ 5  6  7  8  9│
│10 11 12 13 14│ │15 16 17 18 19│
│20 21 22 23 24│ │25 26 27 28 29│
╰────────╮30 31│ │32 33╭────────╯
         ╰─────╯ ╰─────╯         */

/ {
keymap {
compatible = "zmk,keymap";
colemak_layer {
// -----------------------------------------------------------------
// |  Q  |  W  |  F  |  P  |  B  |	 |  J  |  L  |  U  |  Y  |  '" |
// |  A  |  R  |  S  |  T  |  G  |	 |  M  |  N  |  E  |  I  |  O  |
// |  Z  |  X  |  C  |  D  |  V  |	 |  K  |  H  |  ,  |  .  | ;:  |
//                   |-NAV-| SPC |	 | RET |-SYM-|

bindings = <
&kp Q 	&kp W 	&kp F 	&kp P 	&kp B 		&kp J 	&kp L   &kp U     &kp Y   	&kp APOS
&lh_pht LGUI A   &lh_pht LCTRL R   &lh_pht LALT S   &lh_pht LSHFT T  &kp G    &kp M   &rh_pht RSHFT N   &rh_pht RALT E   &rh_pht RCTRL I  &rh_pht RGUI O
&kp Z 	&kp X 	&kp C 	&kp D 	&kp V 		&kp K 	&kp H   &kp COMMA &kp DOT 	&kp SEMI
                   		&lt NAV TAB &kp SPACE 	&kp RET &lt SYM BSPC
>;
};

symbol_layer {
// --------------------------------------------------------------------
// | ESC |  [  |  {  |  (  | ~   | 		|  ^  |  )    |  }   |  ]  |  `  |
// |  -  |  *  |  =  |  _  |  $  | 		|  #  |+Shift+|+Ctrl+|+Opt+|+GUI+|
// |  +  |  |  |  @  |  /  |  %  | 		|     |  \    |  &   |  ?  | !   |
//                   |-NAV-| SPC | 		| RET |_SYM_|
                        
bindings = <
    &kp ESC     &kp LBKT    &kp LBRC    &kp LPAR    &kp TILDE       &kp CARET   &kp RPAR    &kp RBRC    &kp RBKT    &kp GRAVE
    &kp MINUS   &kp STAR    &kp EQUAL   &kp UNDER   &kp DOLLAR      &kp HASH    &sk RSHFT   &sk RCTRL 	&sk RALT    &sk RGUI
    &kp PLUS    &kp PIPE    &kp AT      &kp FSLH    &kp PERCENT     &none       &kp BSLH    &kp AMPS    &kp QMARK   &kp EXCL
                             		    &trans 		&kp SPACE 	    &kp RET     &trans
>;
};

number_layer {
// --------------------------------------------------------------------
// | [{  |  7& |  8* |  9( |  ]} | 		|     |   |   |  -_  |  /  |     |
// | ;:  |  4$ |  5% |  6^ |  =+ | 		|     |+Shift+|+Ctrl+|+Opt+|+GUI+|
// | 0   |  1! |  2@ |  3# |  \| | 		|     |  +    |  ?   |  !  |     |
//                   | NAV | SPC | 		| RET |_NUM_|

bindings = <
   &kp LBKT   &kp N7 	&kp N8 	&kp N9 	&kp RBKT 		&none 	&kp PIPE 	&kp MINUS 	&kp FSLH    &none
   &kp SEMI   &kp N4 	&kp N5 	&kp N6 	&kp EQUAL 		&none 	&sk RSHFT   &sk RCTRL 	&sk RALT    &sk RGUI  
   &kp N0     &kp N1 	&kp N2 	&kp N3 	&kp BSLH 		&none 	&kp PLUS 	&kp QMARK  	&kp EXCL    &none
                 				&mo NAV  &kp SPACE   &kp RET &trans
>;
};

nav_layer {
// --------------------------------------------------------------------
// |     | back| fwd  | play|volup| 		|     |     |     |     |     |
// |+GUI+|+Opt+|+Ctrl+|+Sft+|voldn| 		| LFT | DWN | UP  |RIGHT|     |
// |     |     |      |     |     | 		| HOM |PG_DN|PG_UP| END |     |
//                    |_NAV_| SPC | 		| RET |_NUM_|

bindings = <
   &none 	&none     &none 	  &none 	 &none 		    &none    	&none     	&none     	&none     	&none 
   &sk LGUI &sk LALT  &sk LCTRL   &sk LSHFT  &none          &kp LEFT    &kp DOWN  	&kp UP    	&kp RIGHT 	&none  
   &none 	&none 	  &none 	  &none 	 &none 		    &kp HOME 	&kp PG_DN 	&kp PG_UP 	&kp END   	&none 
                                  &trans   &kp SPC 		&trans 		&kp BSPC
>;
};

fun_layer {
// -----------------------------------------------------------------
// |     | F 6 | F 5 | F 4 | F10 | | <!> | <!> | <!> | <!> |     |
// |CAPSL| F 3 | F 2 | F 1 | F11 | | BT2 |VMUTE|VOLDN|VOLUP| <!> |
// |-!!!-| F 9 | F 8 | F 7 | F12 | | BT0 | BT1 |BRIDN|BRIUP|_FUN_|
//                   |     | SPC | | RET |     |

bindings = <
   &none 	&kp F6 	&kp F5 	&kp F4 	&kp F10 		&none 		  &none 		&none 		 	&none 			&none
   &kp CAPS &kp F3  &kp F2 	&kp F1 	&kp F11 		&bt BT_SEL 2  &kp K_MUTE 	&kp C_VOL_DN 	&kp C_VOL_UP 	&none
   &none 	&kp F9 	&kp F8 	&kp F7 	&kp F12 		&bt BT_SEL 0  &bt BT_SEL 1 	&kp C_BRI_DN 	&kp C_BRI_UP 	&trans
                         	&kp TAB 	&trans 			&trans 		  &kp BSPC 
>;
};

lock_layer {
// only way out is the lock combo
// other combos are disabled too
bindings = <
&none &none &none &none &none &none &none &none &none &none 
&none &none &none &none &none &none &none &none &none &none 
&none &none &none &none &none &none &none &none &none &none 
&none &none &none &none 
                    >;
                };
        };
};
